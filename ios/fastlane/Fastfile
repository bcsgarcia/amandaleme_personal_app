default_platform(:ios)

platform :ios do
  desc "Build and deploy to TestFlight"
  lane :deploy do
    # Decodificar e salvar a chave API
    api_key_base64 = ENV['APP_STORE_CONNECT_API_KEY']
    api_key_path = File.expand_path("AuthKey.p8", Dir.pwd)  # Usando caminho absoluto
    UI.message("Decodificando e salvando a chave API em #{api_key_path}")

    File.open(api_key_path, "wb") do |file|
      file.write(Base64.decode64(api_key_base64))
    end

    if File.exist?(api_key_path)
      UI.message("Arquivo de chave API criado com sucesso em #{api_key_path}")
    else
      UI.error("Erro ao criar o arquivo de chave API em #{api_key_path}")
      return  # Saia da execução se o arquivo não puder ser criado
    end

    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
      key_filepath: api_key_path, # Usar o caminho absoluto para o arquivo decodificado
      in_house: false
    )

    match(
      type: "appstore",
      api_key: api_key
    )

    build_app(
      workspace: "Runner.xcworkspace", # Substitua com o nome do seu workspace
      scheme: "Runner",               # Substitua com o nome do seu scheme
      export_method: "app-store",
      api_key: api_key
    )

    upload_to_testflight(
      api_key: api_key
    )
  end
end